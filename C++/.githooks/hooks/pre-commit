#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# 检查当前是否有HEAD，确定对比对象
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# 初次提交：对比一个空的tree对象
	against=$(git hash-object -t tree /dev/null)
fi

# 如果你想允许非ASCII文件名，设置此变量为true
allownonascii=$(git config --type=bool hooks.allownonascii)

# 将输出重定向到stderr
exec 1>&2

# 自动格式化 C and C++ 文件

# Clang Format可执行文件路径(也可以添加到系统变量)
CLANG_FORMAT="C:\\Users\\mzq\\.vscode\\extensions\\ms-vscode.cpptools-1.20.5-win32-x64\\LLVM\\bin\\clang-format.exe"

# # Clang Format配置文件路径
# CLANG_FORMAT_CONFIG="C:\\Users\\mzq\\.vscode\\extensions\\xaver.clang-format-1.9.0\\.clang-format"
# # 临时复制配置文件到项目根目录
# cp "$CLANG_FORMAT_CONFIG" ./.clang-format

# 查找所有暂存的C/C++文件
for file in $(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(cpp|hpp|c|h)$')
do
  # 运行clang-format格式化代码
  "$CLANG_FORMAT" -i "$file"
  # 确保文件被重新添加到暂存区
  git add "$file"
  # 输出格式化信息
  echo "Formatted and added to commit: $file"
done

# 删除临时配置文件
# rm ./.clang-format


# 跨平台项目往往避免使用非ASCII文件名；防止它们被添加到仓库
# 可打印字符范围从空格到波浪号
if [ "$allownonascii" != "true" ] &&
	# 注意，这里使用方括号括住tr范围是可以的，（它在这里是必须的，
	# 为了可移植性到Solaris 10的/usr/bin/tr），因为方括号字节恰好落在指定范围内
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# 如果有空白错误，打印出错误文件名并失败
exec git diff-index --check --cached $against --
